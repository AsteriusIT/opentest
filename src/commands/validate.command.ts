import {getOpenApiTestFile} from '../utils/files.util';
import {TestFileType} from "../types/testFile.type";
import {validateSchema} from "../utils/schema.util";
import {ErrorObject} from "ajv/dist/types";
import chalk from 'chalk';

export function validateCommandFunc(input: string): void {
    // Parse test cases (json)
    const tests: TestFileType = getOpenApiTestFile(input)

    const validate: { success: boolean, errors?: null | ErrorObject[] } = validateSchema(tests)

    if (!validate.success) {
        console.log(chalk.bgRed.white('Validation failed!'));
        validate.errors.forEach(error => {            
            console.log(chalk.blue('Instance Path: ') + chalk.yellow(error.instancePath));
            console.log(chalk.blue('Schema Path: ') + chalk.yellow(error.schemaPath));
            console.log(chalk.blue('Keyword: ') + chalk.green(error.keyword));
            console.log(chalk.blue('Error detail: ') + chalk.red(JSON.stringify(error.params, null, 2)));
            console.log(chalk.blue('Message: ') + chalk.magenta(error.message));
            console.log(chalk.gray('-----------------------------'));
          });
          
        process.exit(1);
    }
}

export const validateCommandHandler = (options: { input: string }) => {
    validateCommandFunc(options.input)
    console.log(`"${options.input}" is a valid opentest file`);
};
