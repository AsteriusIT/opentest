{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "additionalProperties": false,
  "title": "OpenTest Schema",
  "description": "Schema for opentest tests",
  "type": "object",
  "properties": {
    "additionalProperties": false,
    "tests": {
      "additionalProperties": false,
      "description": "Tests to run",
      "type": "array",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "description": "Name of the test",
            "type": "string"
          },
          "description": {
            "description": "Description of the test",
            "type": "string"
          },
          "path": {
            "description": "Path to OpenAPI endpoint",
            "type": "string",
            "pattern": "^/.*$"
          },
          "method": {
            "description": "HTTP method",
            "type": "string",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "DELETE",
              "PATCH"
            ]
          },
          "params": {
            "additionalProperties": false,
            "description": "Parameters to send",
            "type": "object",
            "properties": {
              "query": {
                "description": "Query parameters",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the query parameter",
                      "type": "string"
                    },
                    "value": {
                      "description": "Value of the query parameter",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ]
                }
              },
              "headers": {
                "additionalProperties": false,
                "description": "Headers",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the header",
                      "type": "string"
                    },
                    "value": {
                      "description": "Value of the header",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ]
                }
              }
            }
          },
          "authentication": {
            "$ref": "#/properties/authentication"
          },
          "body": {
            "description": "Body to send"
          },
          "expected": {
            "description": "Expected response",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "status": {
                "description": "Expected status code",
                "type": "integer"
              },
              "body": {
                "description": "Body to send",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "ref": {
                    "description": "Reference to a schema",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value to compare",
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "if": {
          "properties": {
            "method": {
              "const": "POST"
            }
          }
        },
        "then": {
          "required": [
            "name",
            "description",
            "path",
            "body",
            "method"
          ]
        },
        "else": {
          "required": [
            "name",
            "description",
            "path",
            "method"
          ]
        }
      }
    },
    "authentication": {
      "description": "Authentication details",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of authentication",
          "type": "string",
          "enum": [
            "oauth2",
            "basic",
            "bearer",
            "none"
          ]
        },
        "value": {
          "description": "Authentication details",
          "type": "object",
          "oneOf": [
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "oauth2"
                  }
                }
              },
              "then": {
                "properties": {
                  "clientId": {
                    "description": "Client ID",
                    "type": "string"
                  },
                  "clientSecret": {
                    "description": "Client secret",
                    "type": "string"
                  },
                  "scope": {
                    "description": "Scope",
                    "type": "string"
                  },
                  "grantType": {
                    "description": "Grant type",
                    "type": "string"
                  },
                  "accessTokenUrl": {
                    "description": "Access token URL",
                    "type": "string"
                  }
                },
                "required": [
                  "clientId",
                  "clientSecret",
                  "scope",
                  "grantType",
                  "accessTokenUrl"
                ]
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "basic"
                  }
                }
              },
              "then": {
                "properties": {
                  "username": {
                    "description": "Username",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password",
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            },
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "bearer"
                  }
                }
              },
              "then": {
                "properties": {
                  "token": {
                    "description": "Bearer token",
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          ]
        }
      },
      "if": {
        "properties": {
          "type": {
            "const": "none"
          }
        }
      },
      "then": {
        "required": [
          "type"
        ]
      },
      "else": {
        "required": [
          "type",
          "value"
        ]
      }
    }
  }
}